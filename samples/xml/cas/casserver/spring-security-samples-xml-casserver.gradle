import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'io.spring.convention.spring-sample-war'

dependencies {
	compile "org.jasig.cas:cas-server-webapp:4.0.0@war"
	compile slf4jDependencies
}

project.tasks.withType(org.gradle.api.tasks.bundling.War) { war ->
	war.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	project.tasks.war.doFirst {
		war.classpath = war.classpath.filter { !it.name.endsWith(".war") }

		war.project.configurations.runtime.each {
			if (it.name.endsWith(".war")) {
				def fileList = war.project.zipTree(it)
				war.from fileList
			}
		}
	}
}

gretty {
	contextPath = '/cas'
	httpsEnabled = true
	httpPort = 9090
	httpsPort = 9443
}


//
//task casServer (type: org.gradle.api.plugins.jetty.JettyRunWar, dependsOn: 'casServerOverlay') {
//	contextPath = "/cas"
//	connectors = [casServer.class.classLoader.loadClass('org.mortbay.jetty.security.SslSocketConnector').newInstance()]
//	connectors[0].port = 9443
//	connectors[0].keystore = connectors[0].truststore = keystore
//	connectors[0].keyPassword = connectors[0].trustPassword = password
//	connectors[0].wantClientAuth = true
//	connectors[0].needClientAuth = false
//	webApp = casServerOverlay.customWar
//
//	inputs.file casServerOverlay.customWar
//
//	doFirst() {
//		System.setProperty('javax.net.debug', 'ssl')
//		System.setProperty('javax.net.ssl.trustStore', keystore)
//		System.setProperty('javax.net.ssl.trustStorePassword', password)
//		System.setProperty('java.naming.factory.url.pkgs','org.mortbay.naming')
//		System.setProperty('java.naming.factory.initial','org.mortbay.naming.InitialContextFactory')
//	}
//}
